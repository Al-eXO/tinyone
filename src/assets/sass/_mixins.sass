@function calculateRem($size)
  $remSize: $size / 16px
  @return #{$remSize}rem



@mixin clearfix //Usage: @include clearfix
  &:after
    content: ""
    display: table
    clear: both

@mixin opacity($opacity) //Usage: @include opacity(.4)
  opacity: $opacity
  $opacity-ie: $opacity * 100
  filter: alpha(opacity = $opacity-ie) //IE8

@mixin prefix($property, $value, $vendors: webkit moz ms o, $default: true) //Usage: @include prefix('box-sizing', 'border-box', moz webkit)
  @if $vendors
    @each $vendor in $vendors
      #{"-" + $vendor + "-" + $property}: #{$value}
  @if $default
    #{$property}: #{$value}

@mixin screen($size) //Usage: @include screen('tablet') { ... } or @include screen('(min-width: 1367px)') { ... }
  $wide: "(min-width: 1600px)"
  $hd: "(min-width: 1200px)"
  $desktop: "(min-width: 992px)"
  $tablet: "(min-width: 768px)"
  @if $size == wide
    @media only screen and #{$wide}
      @content
  @else if $size == hd
    @media only screen and #{$hd}
      @content
  @else if $size == desktop
    @media only screen and #{$desktop}
      @content
  @else if $size == tablet
    @media only screen and #{$tablet}
      @content
  @else
    @media only screen and #{$size}
      @content

@mixin retina($image, $width, $height) //Usage: @include retina("img/logo@2x.png", 100px, 21px);
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3),  (min-resolution: 1.3dppx)
    background-image: url($image)
    background-size: $width $height

@mixin keyframes($name) //Usage: @include keyframes(animate) { ... }
  @-webkit-keyframes #{$name}
    @content
  @-moz-keyframes #{$name}
    @content
  @keyframes #{$name}
    @content

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) //Usage: @include font-face("MyFont", "path/to/MyFont", $style: normal, $weight: normal);
  @font-face
    font-family: quote($font-name)
    src: url($file-name + '.eot')
    src: url($file-name + '.eot?#iefix')  format('embedded-opentype'), url($file-name + '.woff') format('woff'), url($file-name + '.ttf')  format('truetype'), url($file-name + '.svg##{$font-name}')  format('svg')
    font-weight: $weight
    font-style: $style
